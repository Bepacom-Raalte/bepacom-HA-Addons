#!/command/with-contenv bashio
# shellcheck shell=bash

# ==============================================================================
# Initialize the Interface service
# s6-overlay docs: https://github.com/just-containers/s6-overlay
# ==============================================================================

declare header
declare objectname
declare address
declare objectIdentifier
declare maxApduLenghtAccepted
declare segmentation
declare vendorID
declare foreignBBMD
declare foreignTTL
declare maxSegmentsAccepted
declare defaultPriority
declare updateInterval

# Functions

IPprefix_by_netmask() {
    #function returns prefix for given netmask in arg1
    bits=0
    for octet in $(echo $1| sed 's/\./ /g'); do 
         binbits=$(echo "obase=2; ibase=10; ${octet}"| bc | sed 's/0//g') 
         let bits+=${#binbits}
    done
    echo "/${bits}"
}

# Setting variables

bashio::log.info "Generating BACpypes.ini"

readarray -t eth_adapters < <(ifconfig -a | grep -oE '^(enp|eth|eno)[a-z0-9]+')

{ # Try
    bashio::log.info "Read the array"
    for adapter in "${eth_adapters[@]}"
    do
        ipaddr=$(ifconfig "$adapter" | grep 'inet addr' | cut -d: -f2 | awk '{print $1}')
        if [ -n "$ipaddr" ]; then
            netmask=$(ifconfig $adapter | grep 'Mask' | cut -d: -f4)
            cidr=$(IPprefix_by_netmask $netmask)
            break
        fi
    done
} || {
    bashio::log.warning "No suitable ethernet adapters found. You probably won't detect anything now."
    ipaddr=$(hostname -i)
}

header='[BACpypes]'
objectname="objectName: $(bashio::config 'objectName')"

if [[ $(bashio::config 'address') == "auto" ]]; then
    if [ -z "$ipaddr" ]; then
        bashio::log.error "All adapters checked but found no suitable choice. Check whether you are connected through ethernet with a BACnet network. If this problem persists, contact the developer."
        exit 1
    fi
    address="address: $ipaddr$cidr"
    echo "Using $adapter as $address"
elif [[ -z "$(bashio::config 'objectName')" ]]; then
    echo "Address is empty and didn't detect any suitable devices!"
    exit 1
elif [[ $(bashio::config 'address') == *"/"* ]]; then
    address="address: $(bashio::config 'address')"
else
    address="address: $(bashio::config 'address')/24"
fi

objectIdentifier="objectIdentifier: $(bashio::config 'objectIdentifier')"
maxApduLenghtAccepted="maxApduLengthAccepted: $(bashio::config 'maxApduLenghtAccepted' '1476')"
segmentation="segmentation: $(bashio::config 'segmentation' 'segmentedBoth')"

if [[ -z $(bashio::config 'segmentation' 'segmentedBoth') ]]; then
    segmentation="segmentation: segmentedBoth"
else
    segmentation="segmentation: $(bashio::config 'segmentation' 'segmentedBoth')"
fi

vendorID="vendorIdentifier: $(bashio::config 'vendorID' '15')"
foreignBBMD="foreignBBMD: $(bashio::config 'foreignBBMD' '-')"
foreignTTL="foreignTTL: $(bashio::config 'foreignTTL' '255')"
maxSegmentsAccepted="maxSegmentsAccepted: $(bashio::config 'maxSegmentsAccepted' '64')"

if [[ -z $(bashio::config 'loglevel' 'INFO') ]]; then
    loglevel="loglevel: INFO"
else
    loglevel="loglevel: $(bashio::config 'loglevel')"
fi

defaultPriority="defaultPriority: $(bashio::config 'defaultPriority')"
updateInterval="updateInterval: $(bashio::config 'updateInterval')"

# Generate INI file

printf '%s\n' "$header" "$objectname" "$address" "$objectIdentifier" "$maxApduLenghtAccepted" "$segmentation" "$vendorID" "$foreignBBMD" "$foreignTTL" "$maxSegmentsAccepted" "$loglevel" "$defaultPriority" "$updateInterval" > /usr/bin/BACpypes.ini
cat /usr/bin/BACpypes.ini

printf "$(bashio::addon.ingress_url)" > /usr/bin/ingress.ini
