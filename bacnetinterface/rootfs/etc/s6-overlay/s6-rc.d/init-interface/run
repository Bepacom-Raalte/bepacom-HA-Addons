#!/command/with-contenv bashio
# shellcheck shell=bash

# ==============================================================================
# Initialize the Interface service
# s6-overlay docs: https://github.com/just-containers/s6-overlay
# ==============================================================================

# Declaring variables

declare header
declare objectname
declare address
declare objectIdentifier
declare maxApduLenghtAccepted
declare segmentationSupported
declare vendorID
declare foreignBBMD
declare foreignTTL
declare maxSegmentsAccepted

# Setting variables

bashio::log.info "Generating BACpypes.ini"

readarray -t eth_adapters < <(ifconfig -a | grep -oE '^(enp|eth|eno)[a-z0-9]+')

{ # Try
    for adapter in "${eth_adapters[@]}"
    do
        ipaddr=$(ifconfig "$adapter" | grep 'inet addr' | cut -d: -f2 | awk '{print $1}')
        if [ -n "$ipaddr" ]; then
            break            # Check if ipaddr is not empty
        fi
    done
    if [ -z "$ipaddr" ]; then
        bashio::log.error "All adapters checked but found no suitable choice. Check whether you are connected through ethernet with a BACnet network. If this problem persists, contact the developer."
        exit 1
    fi
} || {
    echo "No suitable ethernet adapters found. You probably won't detect anything now."
    ipaddr=$(hostname -i)
}

header='[BACpypes]'
objectname="objectName: $(bashio::config 'objectName')"
if [[ $(bashio::config 'address') == "auto" ]]; then
    address="address: $ipaddr/24"
    echo "Using $adapter with $ipaddr..."
else
    address="address: $(bashio::config 'address')/24"
fi
objectIdentifier="objectIdentifier: $(bashio::config 'objectIdentifier')"
maxApduLenghtAccepted="maxApduLengthAccepted: $(bashio::config 'maxApduLenghtAccepted' '1024')"
segmentationSupported="segmentationSupported: $(bashio::config 'segmentationSupported' 'segmentedBoth')"
vendorID="vendorIdentifier: $(bashio::config 'vendorID' '15')"
foreignBBMD="foreignBBMD: $(bashio::config 'foreignBBMD' '-')"
foreignTTL="foreignTTL: $(bashio::config 'foreignTTL' '255')"
maxSegmentsAccepted="maxSegmentsAccepted: $(bashio::config 'maxSegmentsAccepted' '24')"
loglevel="loglevel: $(bashio::config 'loglevel')"

# Generate INI file

printf '%s\n' "$header" "$objectname" "$address" "$objectIdentifier" "$maxApduLenghtAccepted" "$segmentationSupported" "$vendorID" "$foreignBBMD" "$foreignTTL" "$maxSegmentsAccepted" "$loglevel" > /usr/bin/BACpypes.ini
cat /usr/bin/BACpypes.ini
