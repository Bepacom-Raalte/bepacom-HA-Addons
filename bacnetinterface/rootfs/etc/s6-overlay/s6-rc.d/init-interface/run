#!/command/with-contenv bashio
# shellcheck shell=bash

# ==============================================================================
# Initialize the Interface service
# s6-overlay docs: https://github.com/just-containers/s6-overlay
# ==============================================================================

# Declaring variables

declare header
declare objectname
declare address
declare objectIdentifier
declare maxApduLenghtAccepted
declare segmentationSupported
declare vendorID
declare foreignBBMD
declare foreignTTL
declare maxSegmentsAccepted
declare eth_adapters


bashio::log.info "Generating BACpypes.ini"


readarray -t eth_adapters < <(ifconfig -a | grep -oE '^(enp|eth|eno)[a-z0-9]+')


for adapter in "${eth_adapters[@]}"
do
	ipaddr=$(ifconfig "$adapter" | grep 'inet addr' | cut -d: -f2 | awk '{print $1}')
	if [ -n "$ipaddr" ]; then
		break			# Check if ipaddr is not empty
	fi
done


if [ -z "$ipaddr" ]; then
	echo "No suitable ethernet adapters found. You probably won't detect anything now."
	ipaddr=$(hostname -i)
fi
echo "Using $adapter with $ipaddr..."


header='[BACpypes]'
objectname="objectName: $(bashio::config 'objectName')"

if [[ $(bashio::config 'address') == "auto" ]]; then
	address="address: $ipaddr/24"
else
	address="address: $(bashio::config 'address')"
fi

objectIdentifier="objectIdentifier: $(bashio::config 'objectIdentifier')"

if [[ "$(bashio::config 'maxApduLenghtAccepted')" == "null" ]]; then
	maxApduLenghtAccepted="maxApduLengthAccepted: 1024"
else
	maxApduLenghtAccepted="maxApduLengthAccepted: $(bashio::config 'maxApduLenghtAccepted')"
fi

if [[ "$(bashio::config 'segmentationSupported')" == "null" ]]; then
	segmentationSupported="segmentationSupported: segmentedBoth"
else
	segmentationSupported="segmentationSupported: $(bashio::config 'segmentationSupported')"
fi

if [[ "$(bashio::config 'vendorID')" == "null" ]]; then
	vendorID="vendorIdentifier: 15"
else
	vendorID="vendorIdentifier: $(bashio::config 'vendorID')"
fi

if [[ "$(bashio::config 'foreignBBMD')" == "null" ]]; then
	foreignBBMD="foreignBBMD: -"
else
	foreignBBMD="foreignBBMD: $(bashio::config 'foreignBBMD')"
fi

if [[ "$(bashio::config 'foreignBBMD')" == "null" ]]; then
	foreignTTL="foreignTTL: 255"
else
	foreignTTL="foreignTTL: $(bashio::config 'foreignTTL')"
fi

if [[ "$(bashio::config 'maxSegmentsAccepted')" == "null" ]]; then
	maxSegmentsAccepted="maxSegmentsAccepted: 24"
else
	maxSegmentsAccepted="maxSegmentsAccepted: $(bashio::config 'maxSegmentsAccepted')"
fi


loglevel="loglevel: $(bashio::config 'loglevel')"

# Generate INI file

printf '%s\n' "$header" "$objectname" "$address" "$objectIdentifier" "$maxApduLenghtAccepted" "$segmentationSupported" "$vendorID" "$foreignBBMD" "$foreignTTL" "$maxSegmentsAccepted" "$loglevel" > /usr/bin/BACpypes.ini
cat /usr/bin/BACpypes.ini
